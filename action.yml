name: "Build and push"
description: "Find the directories with Dockerfiles (not-recursively), build images and push them to the registry"
author: RamPrin
branding:
  icon: arrow-right
  color: purple
inputs:
  directories:
    description: "Which directories to search in. By default searches in any directory which was changed from the previous commit."
    required: false
    default: "$(git log --name-only --diff-filter=d -1 | grep '/' | cut -d '/' -f1 | sort -u)"
  registry:
    description: "Which registry to push into (ecr, cr.yandex, ghcr)"
    required: false
    default: "docker hub"
  registry_url:
    description: "The url of the registry (public.ecr.aws, cr.yandex, ghcr.io)"
    required: false
    default: "registry-1.docker.io"
  registry_id:
    description: "The ID of registry ((ECR):registry-alias, (Yandex):registry-id, (ghcr):namespace)"
    required: true
  username:
    description: "String to enter into docker login --username ((ECR):ACCESS_KEY_ID, (Yandex):[iam, oauth, json_key], (ghcr):USERNAME)"
    required: true
  password:
    description: "String to enter into docker login --password ((ECR):SECRET_ACCESS_KEY, (Yandex):[<Identity and Access Management token>, <OAuth token>, key.json], (ghcr):ACCESS_TOKEN)"
    required: true
  image_user:
    description: "Value to put in --image-user of space ci report" 
    required: false
    default: "None"
  image_token:
    description: "Value to put in --image-token of space ci report"
    required: false
    default: "None"
  space_username:
    description: "Malevich-space username"
    required: true
  space_password:
    description: "Malevich-space password"
    required: true
  api_url:
    description: "URL of an API"
    required: true
  branch_name:
    description: "Name of the branch for "

runs:
  using: composite
  steps:
      - if: ${{ inputs.registry == 'ecr' }}
        uses: unfor19/install-aws-cli-action@v1
      - if: ${{ inputs.registry == 'ecr' }}
        run: |
          aws configure set aws_access_key_id ${{ inputs.username }}
          aws configure set aws_secret_access_key ${{ inputs.password }}
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ inputs.registry_url }}
        shell: 'bash'
      - if: ${{ inputs.registry != 'ecr' }}
        run: |
          echo ${{ inputs.password }} | docker login --username ${{inputs.username}} --password-stdin ${{ inputs.registry_url }}
        shell: 'bash'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          pip install malevich-space>=0.2.3
        shell: 'bash'
      - shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - run: |
          dirs=${{ inputs.directories }}
          if [[ ${dirs[0]} == "" ]];
          then
           echo "No changed directories, exiting..."
           exit 0
          fi
          for dir in $dirs
          do
            name=$(basename $dir)
            if [[ -e $dir ]] && [[ $name != .* ]] && [[ -f $name/Dockerfile ]];
              then
                echo 'Make image from $name/Dockerfile'
                docker build -q -t ${{ inputs.registry_url }}/${{ inputs.registry_id }}/$name:${{ github.sha }} $dir
                if [[ ${{ inputs.registry }} == 'ecr' ]];
                  then
                            aws ecr-public describe-repositories --repository-names $name --region us-east-1 || aws ecr-public create-repository --repository-name $name --region us-east-1
                fi
                docker push -q --all-tags ${{inputs.registry_url}}/${{inputs.registry_id}}/$name
                if [[ ${{ inputs.image_user }} == 'None' ]];
                then
                  space ci report ./$dir ${{ steps.extract_branch.outputs.branch }} \
                  ${{ github.sha }} "${{ github.event.head_commit.message }}" done \
                  ${{ inputs.registry_url }}/${{ inputs.registry_id }}/$name:${{ github.sha }} \
                  --space-username=${{ inputs.space_username }} --space-password=${{ inputs.space_password }} \
                  --api-url=${{ inputs.api_url }}
                else
                  space ci report ./$dir ${{ steps.extract_branch.outputs.branch }} \
                  ${{ github.sha }} "${{ github.event.head_commit.message }}" done \
                  ${{ inputs.registry_url }}/${{ inputs.registry_id }}/$name:${{ github.sha }} \
                  --image-user=${{ inputs.image_user }} --image-token=${{ inputs.image_token }} \
                  --space-username=${{ inputs.space_username }} --space-password=${{ inputs.space_password }} \
                  --api-url=${{ inputs.api_url }}
                fi
                docker tag ${{ inputs.registry_url }}/${{ inputs.registry_id }}/$name:${{ github.sha }} ${{ inputs.registry_url }}/${{ inputs.registry_id }}/$name:latest
                docker push -q --all-tags ${{inputs.registry_url}}/${{inputs.registry_id}}/$name
            fi
          done
        shell: 'bash'
      - run: |
          docker logout
        shell: 'bash'
